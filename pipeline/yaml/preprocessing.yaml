name: Process data Function
description: Clean and split the data downloaded from minio which is the output from download_data.yaml

inputs:
- {name: Tenant, type: String, description: 'Name of minio tenant to access data from'}
- {name: Bucket, type: String, description: 'Name of minio bucket to access data from'}
- {name: in_build_params, type: String, description: 'Name of building parameter dataset to access data from'}
- {name: in_build_params_val, type: String, description: 'Name of building parameter  validation dataset to access data from'}
- {name: in_hour, type: String, description: 'Name of the hourly energy dataset file'}
- {name: in_hour_val, type: String, description: 'Name of the hourly energy dataset file'}
- {name: in_weather, type: String, description: 'Name of weather file'}
- {name: output_path, type: String, description: 'Path where the output data will be stored.'}
outputs:
- {name: output_path, type: String, description: 'Path where the output data will be stored.'}

implementation:
  container:
    # The strict name of a container image that you've pushed to a container registry.
    image: fernandolpz/only-tests:download_data_v3
    command: [
      python3, 
      
      # Path of the program inside the container
      /pipelines/component/src/preprocessing.py,
      
      --tenant,
      {inputValue: Tenant},
      
      --bucket,
      {inputValue: Bucket},
      
      --in_build_params,
      {inputValue: in_build_params},
      
      --in_hour,
      {inputPath: in_hour},
      
      --in_weather,
      {inputPath: in_weather},
      
      --in_build_params_val,
      {inputPath: in_build_params_val},
      
      --in_hour_val,
      {inputPath: in_hour_val},
      
      --output_path,
      {outputPath: output_path},
    ]

